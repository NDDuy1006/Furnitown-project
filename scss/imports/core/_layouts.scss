@-ms-viewport {
    width: device-width;
}
* {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  box-sizing: border-box;
}
html {
  font-size: 62.5%; // => 10px = 1rem
}
body {
  width: 100%;
  max-width: $container-max-width;
  margin: auto;
  @include text(var(--body16-fs), $eb-reg, var(--body16-lh), $black-color, none); // tuỳ chỉnh
  background: $white-color;
  position: relative;
  .container-fluid {
    width: 100%;
    padding-right: var(--gap);
    padding-left: var(--gap);
    margin-right: auto;
    margin-left: auto;
    @include xs {
      padding-right: calc(var(--gap) / 2);
      padding-left: calc(var(--gap) / 2);
    }
  }
  .container {
    width: 100%;
    padding-right: calc(var(--gap) / 2);
    padding-left: calc(var(--gap) / 2);
    margin-right: auto;
    margin-left: auto;
  }

  @media (min-width: $xxs-min) {
    .container {
      max-width: 540px;
    }
  }
  @media (min-width: $xs-min) {
    .container {
      max-width: 720px;
    }
  }
  @media (min-width: $sm-min) {
    .container {
      max-width: 960px;
      }
  }
  @media (min-width: $md-min) {
    .container {
      max-width: $container-width;
      }
  }

  .mainwrapper {
    width: 100%;
    margin: auto;
    @include visible;
  }
  @include lg {
    // CSS responsive large desktop
  }
  @include md {
    // CSS responsive desktop
  }
  @include sm {
    // CSS responsive tablet
  }
  @include xs {
    // CSS responsive mobile
  }
  @include xxs {
    // CSS responsive small mobile
  }
}



// GRID SYSTEM
.row {
  max-width: $grid-width;
  // background-color: rgb(143, 132, 132);
  margin: 0 auto;
  
  &:not(:last-child) { //select everything except the last child
    margin-bottom: $gutter-horizontal;
  }
  
  @include clearfix;
  
  [class^='col-'] {
    // background-color: orange;
    float: left;

    &:not(:last-child) {
    margin-right: $gutter-vertical;
    }
  }
  
  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }
  
  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }
  
  .col-2-of-3 {
    width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
  }
  
  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }
  
  .col-2-of-4 {
    width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
  }
  
  .col-3-of-4 {
    width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
  }
}

